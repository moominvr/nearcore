File {
    shebang: None,
    attrs: [],
    items: [
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            crate,
                        ),
                        colon2_token: Colon2,
                        tree: Path(
                            UsePath {
                                ident: Ident(
                                    serialize,
                                ),
                                colon2_token: Colon2,
                                tree: Name(
                                    UseName {
                                        ident: Ident(
                                            u128_dec_format,
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            crate,
                        ),
                        colon2_token: Colon2,
                        tree: Path(
                            UsePath {
                                ident: Ident(
                                    types,
                                ),
                                colon2_token: Colon2,
                                tree: Group(
                                    UseGroup {
                                        brace_token: Brace,
                                        items: [
                                            Name(
                                                UseName {
                                                    ident: Ident(
                                                        AccountId,
                                                    ),
                                                },
                                            ),
                                            Comma,
                                            Name(
                                                UseName {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                },
                                            ),
                                            Comma,
                                            Name(
                                                UseName {
                                                    ident: Ident(
                                                        Nonce,
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            borsh,
                        ),
                        colon2_token: Colon2,
                        tree: Group(
                            UseGroup {
                                brace_token: Brace,
                                items: [
                                    Name(
                                        UseName {
                                            ident: Ident(
                                                BorshDeserialize,
                                            ),
                                        },
                                    ),
                                    Comma,
                                    Name(
                                        UseName {
                                            ident: Ident(
                                                BorshSerialize,
                                            ),
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            near_crypto,
                        ),
                        colon2_token: Colon2,
                        tree: Name(
                            UseName {
                                ident: Ident(
                                    PublicKey,
                                ),
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            serde,
                        ),
                        colon2_token: Colon2,
                        tree: Group(
                            UseGroup {
                                brace_token: Brace,
                                items: [
                                    Name(
                                        UseName {
                                            ident: Ident(
                                                Deserialize,
                                            ),
                                        },
                                    ),
                                    Comma,
                                    Name(
                                        UseName {
                                            ident: Ident(
                                                Serialize,
                                            ),
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            std,
                        ),
                        colon2_token: Colon2,
                        tree: Path(
                            UsePath {
                                ident: Ident(
                                    fmt,
                                ),
                                colon2_token: Colon2,
                                tree: Name(
                                    UseName {
                                        ident: Ident(
                                            Display,
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Use(
            ItemUse {
                attrs: [],
                vis: Inherited,
                use_token: Use,
                leading_colon: None,
                tree: Path(
                    UsePath {
                        ident: Ident(
                            near_vm_errors,
                        ),
                        colon2_token: Colon2,
                        tree: Name(
                            UseName {
                                ident: Ident(
                                    VMError,
                                ),
                            },
                        ),
                    },
                ),
                semi_token: Semi,
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        doc,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Punct {
                                op: '=',
                                spacing: Alone,
                            },
                            Literal {
                                lit: " Internal",
                            },
                        ],
                    },
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    StorageError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " Key-value db internal failure",
                                    },
                                ],
                            },
                        ],
                        ident: Ident(
                            StorageInternalError,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " Storage is PartialStorage and requested a missing trie node",
                                    },
                                ],
                            },
                        ],
                        ident: Ident(
                            TrieNodeMissing,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " Either invalid state or key-value db is corrupted.",
                                    },
                                ],
                            },
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " For PartialStorage it cannot be corrupted.",
                                    },
                                ],
                            },
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " Error message is unreliable and for debugging purposes only. It's also probably ok to",
                                    },
                                ],
                            },
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " panic in every place that produces this error.",
                                    },
                                ],
                            },
                            Attribute {
                                pound_token: Pound,
                                style: Outer,
                                bracket_token: Bracket,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident(
                                                doc,
                                            ),
                                            arguments: None,
                                        },
                                    ],
                                },
                                tokens: TokenStream [
                                    Punct {
                                        op: '=',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: " We can check if db is corrupted by verifying everything in the state trie.",
                                    },
                                ],
                            },
                        ],
                        ident: Ident(
                            StorageInconsistentState,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                String,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        std,
                                    ),
                                    arguments: None,
                                },
                                Colon2,
                                PathSegment {
                                    ident: Ident(
                                        fmt,
                                    ),
                                    arguments: None,
                                },
                                Colon2,
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        StorageError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        MethodCall(
                                            ExprMethodCall {
                                                attrs: [],
                                                receiver: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        f,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                dot_token: Dot,
                                                method: Ident(
                                                    write_str,
                                                ),
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Reference(
                                                        ExprReference {
                                                            attrs: [],
                                                            and_token: And,
                                                            raw: Reserved {
                                                                private: (),
                                                            },
                                                            mutability: None,
                                                            expr: Macro(
                                                                ExprMacro {
                                                                    attrs: [],
                                                                    mac: Macro {
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        format,
                                                                                    ),
                                                                                    arguments: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        bang_token: Bang,
                                                                        delimiter: Paren(
                                                                            Paren,
                                                                        ),
                                                                        tokens: TokenStream [
                                                                            Literal {
                                                                                lit: "{:?}",
                                                                            },
                                                                            Punct {
                                                                                op: ',',
                                                                                spacing: Alone,
                                                                            },
                                                                            Ident {
                                                                                sym: self,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        std,
                                    ),
                                    arguments: None,
                                },
                                Colon2,
                                PathSegment {
                                    ident: Ident(
                                        error,
                                    ),
                                    arguments: None,
                                },
                                Colon2,
                                PathSegment {
                                    ident: Ident(
                                        Error,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        StorageError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [],
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        doc,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Punct {
                                op: '=',
                                spacing: Alone,
                            },
                            Literal {
                                lit: " External",
                            },
                        ],
                    },
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    InvalidTxError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidAccessKey,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                InvalidAccessKeyError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidSigner,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                signer_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            SignerDoesNotExist,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                signer_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidNonce,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                tx_nonce,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Nonce,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                ak_nonce,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Nonce,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidReceiver,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                receiver_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidSignature,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            NotEnoughBalance,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                signer_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                balance,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                cost,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            RentUnpaid,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                signer_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                amount,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            CostOverflow,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidChain,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            Expired,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    InvalidAccessKeyError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [],
                        ident: Ident(
                            AccessKeyNotFound,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                public_key,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                PublicKey,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            ReceiverMismatch,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                tx_receiver,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                ak_receiver,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            MethodNameMismatch,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                method_name,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                String,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            ActionError,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            NotEnoughAllowance,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                public_key,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                PublicKey,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                allowance,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                cost,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Struct(
            ItemStruct {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                struct_token: Struct,
                ident: Ident(
                    ActionError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                fields: Named(
                    FieldsNamed {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        index,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Option,
                                                    ),
                                                    arguments: AngleBracketed(
                                                        AngleBracketedGenericArguments {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                Type(
                                                                    Path(
                                                                        TypePath {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            u64,
                                                                                        ),
                                                                                        arguments: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        kind,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        ActionErrorKind,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                        ],
                    },
                ),
                semi_token: None,
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    ActionErrorKind,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [],
                        ident: Ident(
                            AccountAlreadyExists,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            AccountDoesNotExist,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            CreateAccountNotAllowed,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                predecessor_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            ActorNoPermission,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                actor_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            DeleteKeyDoesNotExist,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                public_key,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                PublicKey,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            AddKeyAlreadyExists,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                public_key,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                PublicKey,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            DeleteAccountStaking,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            DeleteAccountHasRent,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                balance,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            RentUnpaid,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                amount,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            TriesToUnstake,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            TriesToStake,
                        ),
                        fields: Named(
                            FieldsNamed {
                                brace_token: Brace,
                                named: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                account_id,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                AccountId,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                stake,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                locked,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                    Field {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: Outer,
                                                bracket_token: Bracket,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                serde,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                tokens: TokenStream [
                                                    Group {
                                                        delimiter: Parenthesis,
                                                        stream: TokenStream [
                                                            Ident {
                                                                sym: with,
                                                            },
                                                            Punct {
                                                                op: '=',
                                                                spacing: Alone,
                                                            },
                                                            Literal {
                                                                lit: "u128_dec_format",
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                        vis: Inherited,
                                        ident: Some(
                                            Ident(
                                                balance,
                                            ),
                                        ),
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                Balance,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                    Comma,
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            FunctionCall,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                VMError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            ActionErrorKind,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ActionError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        e,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    ActionErrorKind,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            ActionError,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Struct(
                                            ExprStruct {
                                                attrs: [],
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                ActionError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Named(
                                                            Ident(
                                                                index,
                                                            ),
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Path(
                                                            ExprPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                None,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Named(
                                                            Ident(
                                                                kind,
                                                            ),
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Path(
                                                            ExprPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                e,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        InvalidTxError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Match(
                                            ExprMatch {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidSigner,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                signer_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    signer_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Invalid signer account ID {:?} according to requirements",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: signer_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                SignerDoesNotExist,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                signer_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    signer_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Signer {:?} does not exist",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: signer_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: TupleStruct(
                                                            PatTupleStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKey,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                pat: PatTuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    access_key_error,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: MethodCall(
                                                            ExprMethodCall {
                                                                attrs: [],
                                                                receiver: Path(
                                                                    ExprPath {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident(
                                                                                        access_key_error,
                                                                                    ),
                                                                                    arguments: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                dot_token: Dot,
                                                                method: Ident(
                                                                    fmt,
                                                                ),
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Path(
                                                                        ExprPath {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident(
                                                                                            f,
                                                                                        ),
                                                                                        arguments: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidNonce,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                tx_nonce,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    tx_nonce,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                ak_nonce,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    ak_nonce,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Transaction nonce {} must be larger than nonce of the used access key {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: tx_nonce,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: ak_nonce,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidReceiver,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                receiver_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    receiver_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Invalid receiver account ID {:?} according to requirements",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: receiver_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Path(
                                                            PatPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidSignature,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Transaction is not signed with the given public key",
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                NotEnoughBalance,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                signer_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    signer_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                balance,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    balance,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                cost,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    cost,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Sender {:?} does not have enough balance {} for operation costing {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: signer_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: balance,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: cost,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                RentUnpaid,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                signer_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    signer_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                amount,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    amount,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Failed to execute, because the account {:?} wouldn't have enough to pay required rent {}",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: signer_id,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: amount,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Path(
                                                            PatPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                CostOverflow,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Transaction gas or balance cost is too high",
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Path(
                                                            PatPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidChain,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Transaction parent block hash doesn't belong to the current chain",
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Path(
                                                            PatPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTxError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Expired,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Transaction has expired",
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            InvalidAccessKeyError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        InvalidTxError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        error,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    InvalidAccessKeyError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        InvalidTxError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        InvalidAccessKey,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            error,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        InvalidAccessKeyError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Match(
                                            ExprMatch {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKeyError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                AccessKeyNotFound,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                public_key,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    public_key,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Signer {:?} doesn't have access key with the given public_key {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: public_key,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKeyError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ReceiverMismatch,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                tx_receiver,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    tx_receiver,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                ak_receiver,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    ak_receiver,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Transaction receiver_id {:?} doesn't match the access key receiver_id {:?}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: tx_receiver,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: ak_receiver,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKeyError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                MethodNameMismatch,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                method_name,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    method_name,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Transaction method name {:?} isn't allowed by the access key",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: method_name,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Path(
                                                            PatPath {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKeyError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "The used access key requires exactly one FunctionCall action",
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidAccessKeyError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                NotEnoughAllowance,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                public_key,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    public_key,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                allowance,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    allowance,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                cost,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    cost,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Access Key {:?}:{} does not have enough balance {} for transaction costing {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: public_key,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: allowance,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: cost,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Struct(
            ItemStruct {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        doc,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Punct {
                                op: '=',
                                spacing: Alone,
                            },
                            Literal {
                                lit: " Happens when the input balance doesn't match the output balance in Runtime apply.",
                            },
                        ],
                    },
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                struct_token: Struct,
                ident: Ident(
                    BalanceMismatchError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                fields: Named(
                    FieldsNamed {
                        brace_token: Brace,
                        named: [
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        incoming_validator_rewards,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        initial_accounts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        incoming_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        processed_delayed_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        initial_postponed_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        final_accounts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        outgoing_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        new_delayed_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        final_postponed_receipts_balance,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        total_rent_paid,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        total_validator_reward,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        total_balance_burnt,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                            Field {
                                attrs: [],
                                vis: Public(
                                    VisPublic {
                                        pub_token: Pub,
                                    },
                                ),
                                ident: Some(
                                    Ident(
                                        total_balance_slashed,
                                    ),
                                ),
                                colon_token: Some(
                                    Colon,
                                ),
                                ty: Path(
                                    TypePath {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Balance,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            },
                            Comma,
                        ],
                    },
                ),
                semi_token: None,
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        BalanceMismatchError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Local(
                                        Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        initial_balance,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            init: Some(
                                                (
                                                    Eq,
                                                    MethodCall(
                                                        ExprMethodCall {
                                                            attrs: [],
                                                            receiver: MethodCall(
                                                                ExprMethodCall {
                                                                    attrs: [],
                                                                    receiver: MethodCall(
                                                                        ExprMethodCall {
                                                                            attrs: [],
                                                                            receiver: MethodCall(
                                                                                ExprMethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Field(
                                                                                        ExprField {
                                                                                            attrs: [],
                                                                                            base: Path(
                                                                                                ExprPath {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident(
                                                                                                                    self,
                                                                                                                ),
                                                                                                                arguments: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                            dot_token: Dot,
                                                                                            member: Named(
                                                                                                Ident(
                                                                                                    incoming_validator_rewards,
                                                                                                ),
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    dot_token: Dot,
                                                                                    method: Ident(
                                                                                        saturating_add,
                                                                                    ),
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Field(
                                                                                            ExprField {
                                                                                                attrs: [],
                                                                                                base: Path(
                                                                                                    ExprPath {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident(
                                                                                                                        self,
                                                                                                                    ),
                                                                                                                    arguments: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                                dot_token: Dot,
                                                                                                member: Named(
                                                                                                    Ident(
                                                                                                        initial_accounts_balance,
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            dot_token: Dot,
                                                                            method: Ident(
                                                                                saturating_add,
                                                                            ),
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Field(
                                                                                    ExprField {
                                                                                        attrs: [],
                                                                                        base: Path(
                                                                                            ExprPath {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                self,
                                                                                                            ),
                                                                                                            arguments: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                        dot_token: Dot,
                                                                                        member: Named(
                                                                                            Ident(
                                                                                                incoming_receipts_balance,
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    dot_token: Dot,
                                                                    method: Ident(
                                                                        saturating_add,
                                                                    ),
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Field(
                                                                            ExprField {
                                                                                attrs: [],
                                                                                base: Path(
                                                                                    ExprPath {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        self,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                dot_token: Dot,
                                                                                member: Named(
                                                                                    Ident(
                                                                                        processed_delayed_receipts_balance,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            dot_token: Dot,
                                                            method: Ident(
                                                                saturating_add,
                                                            ),
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Field(
                                                                    ExprField {
                                                                        attrs: [],
                                                                        base: Path(
                                                                            ExprPath {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                self,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        dot_token: Dot,
                                                                        member: Named(
                                                                            Ident(
                                                                                initial_postponed_receipts_balance,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Local(
                                        Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        final_balance,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            init: Some(
                                                (
                                                    Eq,
                                                    MethodCall(
                                                        ExprMethodCall {
                                                            attrs: [],
                                                            receiver: MethodCall(
                                                                ExprMethodCall {
                                                                    attrs: [],
                                                                    receiver: MethodCall(
                                                                        ExprMethodCall {
                                                                            attrs: [],
                                                                            receiver: MethodCall(
                                                                                ExprMethodCall {
                                                                                    attrs: [],
                                                                                    receiver: MethodCall(
                                                                                        ExprMethodCall {
                                                                                            attrs: [],
                                                                                            receiver: MethodCall(
                                                                                                ExprMethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: MethodCall(
                                                                                                        ExprMethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Field(
                                                                                                                ExprField {
                                                                                                                    attrs: [],
                                                                                                                    base: Path(
                                                                                                                        ExprPath {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident(
                                                                                                                                            self,
                                                                                                                                        ),
                                                                                                                                        arguments: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Named(
                                                                                                                        Ident(
                                                                                                                            final_accounts_balance,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident(
                                                                                                                saturating_add,
                                                                                                            ),
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Field(
                                                                                                                    ExprField {
                                                                                                                        attrs: [],
                                                                                                                        base: Path(
                                                                                                                            ExprPath {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident(
                                                                                                                                                self,
                                                                                                                                            ),
                                                                                                                                            arguments: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        dot_token: Dot,
                                                                                                                        member: Named(
                                                                                                                            Ident(
                                                                                                                                outgoing_receipts_balance,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident(
                                                                                                        saturating_add,
                                                                                                    ),
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Field(
                                                                                                            ExprField {
                                                                                                                attrs: [],
                                                                                                                base: Path(
                                                                                                                    ExprPath {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident(
                                                                                                                                        self,
                                                                                                                                    ),
                                                                                                                                    arguments: None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                                dot_token: Dot,
                                                                                                                member: Named(
                                                                                                                    Ident(
                                                                                                                        new_delayed_receipts_balance,
                                                                                                                    ),
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            dot_token: Dot,
                                                                                            method: Ident(
                                                                                                saturating_add,
                                                                                            ),
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Field(
                                                                                                    ExprField {
                                                                                                        attrs: [],
                                                                                                        base: Path(
                                                                                                            ExprPath {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident(
                                                                                                                                self,
                                                                                                                            ),
                                                                                                                            arguments: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                        dot_token: Dot,
                                                                                                        member: Named(
                                                                                                            Ident(
                                                                                                                final_postponed_receipts_balance,
                                                                                                            ),
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    dot_token: Dot,
                                                                                    method: Ident(
                                                                                        saturating_add,
                                                                                    ),
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Field(
                                                                                            ExprField {
                                                                                                attrs: [],
                                                                                                base: Path(
                                                                                                    ExprPath {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident(
                                                                                                                        self,
                                                                                                                    ),
                                                                                                                    arguments: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                                dot_token: Dot,
                                                                                                member: Named(
                                                                                                    Ident(
                                                                                                        total_rent_paid,
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            dot_token: Dot,
                                                                            method: Ident(
                                                                                saturating_add,
                                                                            ),
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Field(
                                                                                    ExprField {
                                                                                        attrs: [],
                                                                                        base: Path(
                                                                                            ExprPath {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident(
                                                                                                                self,
                                                                                                            ),
                                                                                                            arguments: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                        dot_token: Dot,
                                                                                        member: Named(
                                                                                            Ident(
                                                                                                total_validator_reward,
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    dot_token: Dot,
                                                                    method: Ident(
                                                                        saturating_add,
                                                                    ),
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Field(
                                                                            ExprField {
                                                                                attrs: [],
                                                                                base: Path(
                                                                                    ExprPath {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        self,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                dot_token: Dot,
                                                                                member: Named(
                                                                                    Ident(
                                                                                        total_balance_burnt,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            dot_token: Dot,
                                                            method: Ident(
                                                                saturating_add,
                                                            ),
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Field(
                                                                    ExprField {
                                                                        attrs: [],
                                                                        base: Path(
                                                                            ExprPath {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                self,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        dot_token: Dot,
                                                                        member: Named(
                                                                            Ident(
                                                                                total_balance_slashed,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Expr(
                                        Macro(
                                            ExprMacro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    write,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Bang,
                                                    delimiter: Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Literal {
                                                            lit: "Balance Mismatch Error. The input balance {} doesn't match output balance {}\n\
                                                                         Inputs:\n\
                                                                         \tIncoming validator rewards sum: {}\n\
                                                                         \tInitial accounts balance sum: {}\n\
                                                                         \tIncoming receipts balance sum: {}\n\
                                                                         \tProcessed delayed receipts balance sum: {}\n\
                                                                         \tInitial postponed receipts balance sum: {}\n\
                                                                         Outputs:\n\
                                                                         \tFinal accounts balance sum: {}\n\
                                                                         \tOutgoing receipts balance sum: {}\n\
                                                                         \tNew delayed receipts balance sum: {}\n\
                                                                         \tFinal postponed receipts balance sum: {}\n\
                                                                         \tTotal rent paid: {}\n\
                                                                         \tTotal validators reward: {}\n\
                                                                         \tTotal balance burnt: {}\n\
                                                                         \tTotal balance slashed: {}",
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: initial_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: final_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: incoming_validator_rewards,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: initial_accounts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: incoming_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: processed_delayed_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: initial_postponed_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: final_accounts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: outgoing_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: new_delayed_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: final_postponed_receipts_balance,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: total_rent_paid,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: total_validator_reward,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: total_balance_burnt,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: total_balance_slashed,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Struct(
            ItemStruct {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                struct_token: Struct,
                ident: Ident(
                    IntegerOverflowError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                fields: Unit,
                semi_token: Some(
                    Semi,
                ),
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        doc,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Punct {
                                op: '=',
                                spacing: Alone,
                            },
                            Literal {
                                lit: " Error returned from `Runtime::apply`",
                            },
                        ],
                    },
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    RuntimeError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [],
                        ident: Ident(
                            UnexpectedIntegerOverflow,
                        ),
                        fields: Unit,
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidTxError,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                InvalidTxError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            StorageError,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                StorageError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            BalanceMismatch,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                BalanceMismatchError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IntegerOverflowError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        InvalidTxError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Wild(
                                                PatWild {
                                                    attrs: [],
                                                    underscore_token: Underscore,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    IntegerOverflowError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Path(
                                            ExprPath {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                InvalidTxError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                        Colon2,
                                                        PathSegment {
                                                            ident: Ident(
                                                                CostOverflow,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            IntegerOverflowError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        RuntimeError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Wild(
                                                PatWild {
                                                    attrs: [],
                                                    underscore_token: Underscore,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    IntegerOverflowError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Path(
                                            ExprPath {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                RuntimeError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                        Colon2,
                                                        PathSegment {
                                                            ident: Ident(
                                                                UnexpectedIntegerOverflow,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            StorageError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        RuntimeError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        e,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    StorageError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        RuntimeError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        StorageError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            e,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            BalanceMismatchError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        RuntimeError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        e,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    BalanceMismatchError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        RuntimeError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        BalanceMismatch,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            e,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            InvalidTxError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        RuntimeError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        e,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    InvalidTxError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        RuntimeError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        InvalidTxError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            e,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ActionError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Macro(
                                            ExprMacro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    write,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Bang,
                                                    delimiter: Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Literal {
                                                            lit: "Action #{}: {}",
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: index,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: unwrap_or_default,
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [],
                                                        },
                                                        Punct {
                                                            op: ',',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: self,
                                                        },
                                                        Punct {
                                                            op: '.',
                                                            spacing: Alone,
                                                        },
                                                        Ident {
                                                            sym: kind,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ActionErrorKind,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Match(
                                            ExprMatch {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                AccountAlreadyExists,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Can't create a new account {:?}, because it already exists",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: account_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                AccountDoesNotExist,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Can't complete the action because account {:?} doesn't exist",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActorNoPermission,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                actor_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    actor_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Actor {:?} doesn't have permission to account {:?} to complete the action",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: actor_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                RentUnpaid,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                amount,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    amount,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "The account {} wouldn't have enough balance to pay required rent {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: amount,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                TriesToUnstake,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Account {:?} is not yet staked, but tries to unstake",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: account_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                TriesToStake,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                stake,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    stake,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                locked,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    locked,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                balance,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    balance,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Account {:?} tries to stake {}, but has staked {} and only has {}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: stake,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: locked,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: balance,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                CreateAccountNotAllowed,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                predecessor_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    predecessor_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "The new account_id {:?} can't be created by {:?}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: predecessor_id,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                DeleteKeyDoesNotExist,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: Some(
                                                                    Dot2,
                                                                ),
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Account {:?} tries to remove an access key that doesn't exist",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                AddKeyAlreadyExists,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                public_key,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    public_key,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: Some(
                                                                    Dot2,
                                                                ),
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "The public key {:?} is already used for an existing access key",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: public_key,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                DeleteAccountStaking,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Block(
                                                            ExprBlock {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Expr(
                                                                            Macro(
                                                                                ExprMacro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident(
                                                                                                        write,
                                                                                                    ),
                                                                                                    arguments: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Bang,
                                                                                        delimiter: Paren(
                                                                                            Paren,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Ident {
                                                                                                sym: f,
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "Account {:?} is staking and can not be deleted",
                                                                                            },
                                                                                            Punct {
                                                                                                op: ',',
                                                                                                spacing: Alone,
                                                                                            },
                                                                                            Ident {
                                                                                                sym: account_id,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: None,
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: Struct(
                                                            PatStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                DeleteAccountHasRent,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                account_id,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    account_id,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                    Comma,
                                                                    FieldPat {
                                                                        attrs: [],
                                                                        member: Named(
                                                                            Ident(
                                                                                balance,
                                                                            ),
                                                                        ),
                                                                        colon_token: None,
                                                                        pat: Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    balance,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                                dot2_token: None,
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "Account {:?} can't be deleted. It has {}, which is enough to cover the rent",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: account_id,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: balance,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: TupleStruct(
                                                            PatTupleStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ActionErrorKind,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                FunctionCall,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                pat: PatTuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    s,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "{}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: s,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Enum(
            ItemEnum {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        doc,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Punct {
                                op: '=',
                                spacing: Alone,
                            },
                            Literal {
                                lit: " Error returned in the ExecutionOutcome in case of failure.",
                            },
                        ],
                    },
                    Attribute {
                        pound_token: Pound,
                        style: Outer,
                        bracket_token: Bracket,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        derive,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        tokens: TokenStream [
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: BorshSerialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: BorshDeserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Debug,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Clone,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: PartialEq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Eq,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Deserialize,
                                    },
                                    Punct {
                                        op: ',',
                                        spacing: Alone,
                                    },
                                    Ident {
                                        sym: Serialize,
                                    },
                                ],
                            },
                        ],
                    },
                ],
                vis: Public(
                    VisPublic {
                        pub_token: Pub,
                    },
                ),
                enum_token: Enum,
                ident: Ident(
                    ExecutionError,
                ),
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                brace_token: Brace,
                variants: [
                    Variant {
                        attrs: [],
                        ident: Ident(
                            Action,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                ActionError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                    Variant {
                        attrs: [],
                        ident: Ident(
                            InvalidTx,
                        ),
                        fields: Unnamed(
                            FieldsUnnamed {
                                paren_token: Paren,
                                unnamed: [
                                    Field {
                                        attrs: [],
                                        vis: Inherited,
                                        ident: None,
                                        colon_token: None,
                                        ty: Path(
                                            TypePath {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident(
                                                                InvalidTxError,
                                                            ),
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                ],
                            },
                        ),
                        discriminant: None,
                    },
                    Comma,
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        Display,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ExecutionError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    fmt,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: None,
                                            self_token: SelfValue,
                                        },
                                    ),
                                    Comma,
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        f,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Reference(
                                                TypeReference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            std,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            fmt,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                    Colon2,
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            Formatter,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Result,
                                                        ),
                                                        arguments: AngleBracketed(
                                                            AngleBracketedGenericArguments {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    Type(
                                                                        Tuple(
                                                                            TypeTuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Comma,
                                                                    Type(
                                                                        Path(
                                                                            TypePath {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                std,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                fmt,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                        Colon2,
                                                                                        PathSegment {
                                                                                            ident: Ident(
                                                                                                Error,
                                                                                            ),
                                                                                            arguments: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Match(
                                            ExprMatch {
                                                attrs: [],
                                                match_token: Match,
                                                expr: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        self,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                brace_token: Brace,
                                                arms: [
                                                    Arm {
                                                        attrs: [],
                                                        pat: TupleStruct(
                                                            PatTupleStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ExecutionError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                Action,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                pat: PatTuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    e,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "{}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: e,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                    Arm {
                                                        attrs: [],
                                                        pat: TupleStruct(
                                                            PatTupleStruct {
                                                                attrs: [],
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                ExecutionError,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                        Colon2,
                                                                        PathSegment {
                                                                            ident: Ident(
                                                                                InvalidTx,
                                                                            ),
                                                                            arguments: None,
                                                                        },
                                                                    ],
                                                                },
                                                                pat: PatTuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Ident(
                                                                            PatIdent {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident(
                                                                                    e,
                                                                                ),
                                                                                subpat: None,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        guard: None,
                                                        fat_arrow_token: FatArrow,
                                                        body: Macro(
                                                            ExprMacro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident(
                                                                                    write,
                                                                                ),
                                                                                arguments: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Bang,
                                                                    delimiter: Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: f,
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Literal {
                                                                            lit: "{}",
                                                                        },
                                                                        Punct {
                                                                            op: ',',
                                                                            spacing: Alone,
                                                                        },
                                                                        Ident {
                                                                            sym: e,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                        comma: Some(
                                                            Comma,
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            ActionError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ExecutionError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        error,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    ActionError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        ExecutionError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        Action,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            error,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: Some(
                    (
                        None,
                        Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        From,
                                    ),
                                    arguments: AngleBracketed(
                                        AngleBracketedGenericArguments {
                                            colon2_token: None,
                                            lt_token: Lt,
                                            args: [
                                                Type(
                                                    Path(
                                                        TypePath {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            InvalidTxError,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                            gt_token: Gt,
                                        },
                                    ),
                                },
                            ],
                        },
                        For,
                    ),
                ),
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident(
                                        ExecutionError,
                                    ),
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Inherited,
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident(
                                    from,
                                ),
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Typed(
                                        PatType {
                                            attrs: [],
                                            pat: Ident(
                                                PatIdent {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident(
                                                        error,
                                                    ),
                                                    subpat: None,
                                                },
                                            ),
                                            colon_token: Colon,
                                            ty: Path(
                                                TypePath {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident(
                                                                    InvalidTxError,
                                                                ),
                                                                arguments: None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Type(
                                    RArrow,
                                    Path(
                                        TypePath {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident(
                                                            Self,
                                                        ),
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Expr(
                                        Call(
                                            ExprCall {
                                                attrs: [],
                                                func: Path(
                                                    ExprPath {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        ExecutionError,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                                Colon2,
                                                                PathSegment {
                                                                    ident: Ident(
                                                                        InvalidTx,
                                                                    ),
                                                                    arguments: None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                paren_token: Paren,
                                                args: [
                                                    Path(
                                                        ExprPath {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident(
                                                                            error,
                                                                        ),
                                                                        arguments: None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                ],
                            },
                        },
                    ),
                ],
            },
        ),
    ],
}
